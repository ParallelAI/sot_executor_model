{
  "in": {
    "type": "PubSub",
    "serialization": "Avro",
    "name": "Message",
    "topic": "p2pin",
    "schema": {
      "type": "record",
      "name": "Message",
      "namespace": "parallelai.sot.avro",
      "fields": [
        {
          "name": "eventTimeStr",
          "type": "string",
          "doc": "event time string for debugging"
        }
      ],
      "doc": "A basic schema for storing user records"
    }
  },
  "out": {
    "type": "Datastore",
    "schema": {
      "name": "OutSchema",
      "fields": [
        {
          "name": "score2x",
          "type": "Double"
        }
      ]
    }
  },
  "steps": [
    {
      "type": "source",
      "name": "source1",
      "op": "",
      "func": ""
    },
    {
      "type": "transformation",
      "name": "mapper1",
      "op": "map",
      "func": "m => (m.teamName, m.score.toInt)"
    },
    {
      "type": "transformation",
      "name": "filter",
      "op": "filter",
      "func": "m => m.score > 2"
    },
    {
      "type": "transformation",
      "name": "mapper2",
      "op": "map",
      "func": "m => OutSchema(m._1, m._2.toString, m._2 * 0.123)"
    },
    {
      "type": "transformation",
      "name": "sumByKey",
      "op": "sumByKey",
      "func": ""
    },
    {
      "type": "sink",
      "name": "sink1",
      "op": "",
      "func": ""
    }
  ],
  "dag": [
    {
      "from": "source1",
      "to": "filter"
    },
    {
      "from": "filter",
      "to": "mapper1"
    },
    {
      "from": "mapper1",
      "to": "sumByKey"
    },
    {
      "from": "sumByKey",
      "to": "mapper2"
    },
    {
      "from": "mapper2",
      "to": "sink1"
    }
  ]
}