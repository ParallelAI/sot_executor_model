{
  "schemas": [
    {
      "type": "pubsub",
      "name": "pubsub1",
      "topic": "p2pin",
      "definition": {
        "type": "record",
        "name": "Message",
        "namespace": "parallelai.sot.avro",
        "fields": [
          {
            "name": "user",
            "type": "string",
            "doc": "Name of the user"
          },
          {
            "name": "teamName",
            "type": "string",
            "doc": "Name of the team"
          },
          {
            "name": "score",
            "type": "int",
            "doc": "User score"
          },
          {
            "name": "eventTime",
            "type": "long",
            "doc": "time when event created"
          },
          {
            "name": "eventTimeStr",
            "type": "string",
            "doc": "event time string for debugging"
          }
        ],
        "doc": "A basic schema for storing user records"
      }
    },
    {
      "type": "datastore",
      "kind": "kind1",
      "name": "datastore1",
      "definition": {
        "type": "datastoredefinition",
        "name": "OutSchema",
        "fields": [
          {
            "name": "teamscores",
            "type": "String"
          },
          {
            "name": "score1",
            "type": "String"
          },
          {
            "name": "score2",
            "type": "Double"
          }
        ]
      }
    }
  ],
  "steps": [
    {
      "type": "source",
      "name": "in",
      "schema": "pubsub1"
    },
    {
      "type": "transformation",
      "name": "mapper1",
      "op": "map",
      "func": "m => (m.teamName, m.score.toInt)"
    },
    {
      "type": "transformation",
      "name": "filter",
      "op": "filter",
      "func": "m => m.score > 2"
    },
    {
      "type": "transformation",
      "name": "mapper2",
      "op": "map",
      "func": "m => OutSchema(m._1, m._2.toString, m._2 * 0.123)"
    },
    {
      "type": "transformation",
      "name": "sumByKey",
      "op": "sumByKey",
      "func": ""
    },
    {
      "type": "sink",
      "name": "out",
      "schema": "datastore1"
    }
  ],
  "dag": [
    {
      "from": "in",
      "to": "filter"
    },
    {
      "from": "filter",
      "to": "mapper1"
    },
    {
      "from": "mapper1",
      "to": "sumByKey"
    },
    {
      "from": "sumByKey",
      "to": "mapper2"
    },
    {
      "from": "mapper2",
      "to": "out"
    }
  ]
}